<?xml version="1.0"?>
<section>
  <title>external</title>
  <para>The external module performs checks via external processes like more traditional monitoring systems.  While this approach is far less efficient and does not scale well on a single system, it provides easier transition from existing monitoring systems.  Checks should exit normally with an exit status of 0 for success, 1 or 2 for failure and 3 for unknown.  Exiting with a status of 3 is highly discouraged.  The standard output is provided as the status of the check.</para>
  <variablelist>
    <varlistentry>
      <term>loader</term>
      <listitem>
        <para>C</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>image</term>
      <listitem>
        <para>external.so</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <section>
    <title>Module Configuration</title>
    <variablelist>
      <varlistentry>
        <term>user</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>required</term>
              <listitem>
                <para>optional</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>allowed</term>
              <listitem>
                <para>.+</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>The user under which the external checks should be executed.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <variablelist>
      <varlistentry>
        <term>group</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>required</term>
              <listitem>
                <para>optional</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>allowed</term>
              <listitem>
                <para>.+</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>The group under which the external checks should be executed.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
  <section>
    <title>Check Configuration</title>
    <variablelist>
      <varlistentry>
        <term>command</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>required</term>
              <listitem>
                <para>required</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>allowed</term>
              <listitem>
                <para>.+</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>The path to the command to be executed.  This is the first argument to the execve system call.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <variablelist>
      <varlistentry>
        <term>arg0</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>required</term>
              <listitem>
                <para>optional</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>allowed</term>
              <listitem>
                <para>.+</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>The program name.  If not specified, it is derived from the command argument. Normal interpolation rules apply.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <variablelist>
      <varlistentry>
        <term>arg\d+</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>required</term>
              <listitem>
                <para>optional</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>allowed</term>
              <listitem>
                <para>.+</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>The arguments to the program.  The external module will start with arg1 and increment collecting arguments until argN is not found.  Normal interpolation rules apply.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <variablelist>
      <varlistentry>
        <term>env_\S+</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>required</term>
              <listitem>
                <para>optional</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>allowed</term>
              <listitem>
                <para>.+</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>These parameters allow the setting of environment variables for the command execution.  The text following env_ is the key and the parameter value is the value of the environment variable to be set via execve.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <variablelist>
      <varlistentry>
        <term>output_extract</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>required</term>
              <listitem>
                <para>optional</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>allowed</term>
              <listitem>
                <para>.+</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>This is a regular expression that is globally applied to the stdout of the command.  Each match is turned into a metric. It is a requirement to used named capturing in the regular expression where "key" is the named match of the metric name and "value" is the named match for the matric value.  A sample for extracting performance data from Nagios commands would be: (?&lt;key&gt;\S+)=(?&lt;value&gt;[^;\s]+)(?=[;\s])</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
  <example>
    <title>Checking a service via the /path/to/check_foo command.</title>
    <para>The hypothetical check_foo command takes a target host with the -H parameter, runs a check and returns its health via exit code and stdout. We set the environment variable QUUX to the value BAZ.  The check is against host 10.10.2.2.</para>
    <programlisting>
      &lt;noit&gt;
        &lt;modules&gt;
          &lt;module image="external" name="external"/&gt;
        &lt;/modules&gt;
        &lt;checks&gt;
          &lt;check uuid="1e8edc38-0d88-11de-93ee-af2195eab5d5"
                 module="external" name="foo" target="10.10.2.2"&gt;
            &lt;config&gt;
              &lt;command&gt;/path/to/check_foo&lt;/command&gt;
              &lt;arg1&gt;-H&lt;/arg1&gt;
              &lt;arg2&gt;%[target]&lt;/arg2&gt;
              &lt;env_QUUX&gt;BAZ&lt;/env_QUUX&gt;
            &lt;/config&gt;
          &lt;/check&gt;
        &lt;/checks&gt;
      &lt;/noit&gt;
      </programlisting>
  </example>
</section>
